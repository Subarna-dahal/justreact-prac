{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subar\\\\OneDrive\\\\Desktop\\\\reacthex\\\\apps\\\\src\\\\Components\\\\Quotes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quotes = () => {\n  _s();\n  function getrandomquotes(quotes) {\n    return quotes[Math.floor(Math.random() * quotes.length)];\n  }\n  const [quotes, setquotes] = useState([]);\n  const [quote, setquots] = useState(null);\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(json => {\n      setquotes(json);\n      setquots(json[0]);\n    });\n  }, []);\n  function getNewQuote() {\n    setquotes(getnewrandomquotes(quotes));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Quotes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Project 3: Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u201C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), quote === null || quote === void 0 ? void 0 : quote.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"- \", quote === null || quote === void 0 ? void 0 : quote.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Quotes, \"pkc8Kfv87QkAoy7qY6VuPatxp5E=\");\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Quotes","_s","getrandomquotes","quotes","Math","floor","random","length","setquotes","quote","setquots","fetch","then","res","json","getNewQuote","getnewrandomquotes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","author","_c","$RefreshReg$"],"sources":["C:/Users/subar/OneDrive/Desktop/reacthex/apps/src/Components/Quotes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\nconst Quotes=()=>{\r\n    function getrandomquotes(quotes){\r\n        return quotes[Math.floor(Math.random()*quotes.length)];\r\n    }\r\n    const[quotes,setquotes]=useState([]);\r\n    const[quote,setquots]=useState(null);\r\n    \r\n    useEffect(()=>{\r\n     fetch(\"https://type.fit/api/quotes\")\r\n     .then(res=>res.json())\r\n     .then((json)=>{\r\n        setquotes(json);\r\n        setquots(json[0]);\r\n     })\r\n    },[])\r\n    function getNewQuote(){\r\n        setquotes(getnewrandomquotes(quotes\r\n        ));\r\n    }\r\n    return(\r\n        <div className=\"Quotes\">\r\n         <h1>Project 3: Quote Generator</h1>\r\n      <section>\r\n        <button onClick={getNewQuote}>New Quote</button>\r\n        <h3>\r\n          <span>â€œ</span>\r\n          {quote?.text}\r\n        </h3>\r\n        <i>- {quote?.author}</i>\r\n      </section>\r\n        </div>\r\n    )\r\n}\r\nexport default Quotes;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,MAAM,GAACA,CAAA,KAAI;EAAAC,EAAA;EACb,SAASC,eAAeA,CAACC,MAAM,EAAC;IAC5B,OAAOA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAACH,MAAM,CAACI,MAAM,CAAC,CAAC;EAC1D;EACA,MAAK,CAACJ,MAAM,EAACK,SAAS,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAK,CAACY,KAAK,EAACC,QAAQ,CAAC,GAACb,QAAQ,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAI;IACbe,KAAK,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,GAAG,IAAEA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACrBF,IAAI,CAAEE,IAAI,IAAG;MACXN,SAAS,CAACM,IAAI,CAAC;MACfJ,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC;EACH,CAAC,EAAC,EAAE,CAAC;EACL,SAASC,WAAWA,CAAA,EAAE;IAClBP,SAAS,CAACQ,kBAAkB,CAACb,MAC7B,CAAC,CAAC;EACN;EACA,oBACIJ,OAAA;IAAKkB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACtBnB,OAAA;MAAAmB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCvB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QAAQwB,OAAO,EAAER,WAAY;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChDvB,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UAAAmB,QAAA,EAAM;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACbb,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEe,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eACLvB,OAAA;QAAAmB,QAAA,GAAG,IAAE,EAACT,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEgB,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAAArB,EAAA,CAhCKD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AAiCZ,eAAeA,MAAM;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}