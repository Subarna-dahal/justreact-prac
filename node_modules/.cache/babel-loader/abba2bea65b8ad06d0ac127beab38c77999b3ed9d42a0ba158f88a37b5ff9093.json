{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subar\\\\OneDrive\\\\Desktop\\\\reacthex\\\\apps\\\\src\\\\Components\\\\Quotes.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Quotes.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Quotes = () => {\n  _s();\n  function getRandomQuote(quotes) {\n    return quotes[Math.floor(Math.random() * quotes.length)];\n  }\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    fetch(\"https://type.fit/api/quotes\").then(res => res.json()).then(json => {\n      setQuotes(json);\n      setQuote(json[0]);\n    });\n  }, []);\n  function getNewQuote() {\n    setQuote(getRandomQuote(quotes));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quotes-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Quote Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-quote-btn\",\n        onClick: getNewQuote,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u201C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), quotes === null || quotes === void 0 ? void 0 : quotes.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        children: [\"- \", quotes === null || quotes === void 0 ? void 0 : quotes.author]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Quotes, \"SUU9YDCVpUtZ6H24bwM60eqca2E=\");\n_c = Quotes;\nexport default Quotes;\nvar _c;\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Quotes","_s","getRandomQuote","quotes","Math","floor","random","length","setQuotes","fetch","then","res","json","setQuote","getNewQuote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","author","_c","$RefreshReg$"],"sources":["C:/Users/subar/OneDrive/Desktop/reacthex/apps/src/Components/Quotes.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Quotes.css\"; \r\n\r\nconst Quotes = () => {\r\n  function getRandomQuote(quotes) {\r\n    return quotes[Math.floor(Math.random() * quotes.length)];\r\n  }\r\n\r\n  const [quotes, setQuotes] = useState([]);\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(\"https://type.fit/api/quotes\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        setQuotes(json);\r\n        setQuote(json[0]);\r\n      });\r\n  }, []);\r\n\r\n  function getNewQuote() {\r\n    setQuote(getRandomQuote(quotes));\r\n  }\r\n\r\n  return (\r\n    <div className=\"quotes-container\"> {/* Added a container class */}\r\n      <h1> Quote Generator</h1>\r\n      <section>\r\n        <button className=\"new-quote-btn\" onClick={getNewQuote}>\r\n          New Quote\r\n        </button>\r\n        <h3>\r\n          <span>â€œ</span>\r\n          {quotes?.text}\r\n        </h3>\r\n        <i>- {quotes?.author}</i>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,SAASC,cAAcA,CAACC,MAAM,EAAE;IAC9B,OAAOA,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGH,MAAM,CAACI,MAAM,CAAC,CAAC;EAC1D;EAEA,MAAM,CAACJ,MAAM,EAAEK,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAGxCD,SAAS,CAAC,MAAM;IACda,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEE,IAAI,IAAK;MACdJ,SAAS,CAACI,IAAI,CAAC;MACfC,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IACnB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASE,WAAWA,CAAA,EAAG;IACrBD,QAAQ,CAACX,cAAc,CAACC,MAAM,CAAC,CAAC;EAClC;EAEA,oBACEJ,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,GAAC,GAAC,eACjCjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAQgB,SAAS,EAAC,eAAe;QAACM,OAAO,EAAEP,WAAY;QAAAE,QAAA,EAAC;MAExD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTrB,OAAA;QAAAiB,QAAA,gBACEjB,OAAA;UAAAiB,QAAA,EAAM;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACbjB,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEmB,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACX,CAAC,eACLrB,OAAA;QAAAiB,QAAA,GAAG,IAAE,EAACb,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEoB,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC;AAACnB,EAAA,CApCID,MAAM;AAAAwB,EAAA,GAANxB,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}